<?php

/**
 * @file
 * Function to support theming in Zero sub-themes.
 */

use Drupal\Core\Template\Attribute;

/**
 * Preprocess variables for html templates.
 *
 * @param $variables
 */
function zero_preprocess_html(&$variables) {

  $current_path = \Drupal::service('path.current')->getPath();
  $current_path = substr($current_path, 1);
  $exploded_path = explode('/', $current_path);
  $css_class = 'path';

  foreach ($exploded_path as $path) {
    $css_class .= '-' . $path;
    $variables['attributes']['class'][] = $css_class;
  }
}

/**
 * Preprocess variables for page templates.
 *
 * @param $variables
 */
function zero_preprocess_page(&$variables) {

  $regions = array(
    'main',
    'sidebar_firs',
    'sidebar_second'
  );
  $variables['row']['main']['attributes'] = new Attribute(
    array(
      'class' => active_regions($regions)
    )
  );

  $variables['container']['attributes'] = new Attribute(
    array(
      'class' => array(
        'container',
        'clearfix',
      )
    )
  );
}

/**
 * Gets an array of region keys, check if those regions are active and returns
 * an array of CSS class that lists which regions are active. E.g. in the
 * .row-main there are main, sidebar_first and sidebar_second regions. If all
 * regions are active the function will return .has-regions--1-2-3 and
 * .active-regions--3. If only main and sidebar_second are active the function
 * will return .has-regions--1-3 and .active-regions--2.
 *
 * @param array $regions
 * @return array
 */
function active_regions($regions) {

  $has_regions = 'has-regions-';
  $has_regions_counter = 0;
  $active_regions_counter = 0;

  foreach ($regions as $region) {

    $has_regions_counter++;

    if(!empty($variables['page'][$region])) {
      $has_regions .= ('-' . $has_regions_counter);
      $active_regions_counter++;
    }
  }

  return array(
    $has_regions,
    'active-regions--' . $active_regions_counter
  );
}
